name: Build CLI tool

on:
  push:
    branches:
      - master
      - fix/signing

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install native dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get install -y libpcsclite-dev
      - name: Install native dependencies (MacOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install pcsc-lite
      - if: matrix.os == 'macos-latest'
        name: Import codesign certificates for application (Mac OS)
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.MACOS_CERTIFICATES_P12 }}
          p12-password: ${{ secrets.MACOS_CERTIFICATES_P12_PASSWORD }}
      - if: matrix.os == 'macos-latest'
        name: Import codesign certificates for installer (Mac OS)
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.MACOS_CERTIFICATES_INSTALLER_P12 }}
          p12-password: ${{ secrets.MACOS_CERTIFICATES_INSTALLER_P12_PASSWORD }}
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Install Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies (root)
        run: |
          npm --include=dev install
      - name: Install dependencies (cli)
        run: |
          cd cli
          npm --include=dev install
      - name: Package HaLo CLI tool (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd cli
          node_modules/.bin/pkg -t node16-linux-x64 package.json
      - name: Package HaLo CLI tool (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd cli
          node_modules/.bin/pkg -t node16-win-x64 package.json
      - name: Package HaLo CLI tool (MacOS)
        if: matrix.os == 'macos-latest'
        run: |
          cd cli
          node_modules/.bin/pkg -t node16-macos-x64 package.json
      - name: Sign application for Mac OS
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p cli/dist/root/usr/local/bin/
          mv cli/dist/halocli cli/dist/root/usr/local/bin/halocli
          /usr/bin/codesign --deep --force --options=runtime --entitlements ./cli/Entitlements.plist --sign "${{ secrets.MACOS_IDENTITY }}" --timestamp ./cli/dist/usr/local/bin/halocli
          pkgbuild --root ./cli/dist/root --identifier "org.arx.halo.halocli" --version "1.0.$(date +%s)" --install-location "/" --sign "${{ secrets.MACOS_IDENTITY_INSTALLER }}" ./cli/dist/halocli.pkg
      - name: Notarize application for Mac OS
        if: matrix.os == 'macos-latest'
        run: |
          xcrun notarytool submit "--apple-id=${{ secrets.MACOS_APPLE_ID }}" "--password=${{ secrets.MACOS_PWD_ALTOOL }}" "--team-id=${{ secrets.MACOS_TEAM_ID }}" --progress --wait ./cli/dist/halocli.pkg
      - name: Staple notarized application for Mac OS
        if: matrix.os == 'macos-latest'
        run: |
          xcrun stapler staple -v ./cli/dist/halocli.pkg
          rm -rf ./cli/dist/root/
      - name: Upload artifacts
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v3
        with:
          name: halo-cli-${{ matrix.os }}
          path: cli/dist/*
