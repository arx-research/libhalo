name: Build halocli tool

on:
  push:
    branches:
      - '*'
    tags:
      - 'halocli-v*'
  pull_request:
    branches:
      - '*'

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Draft release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/halocli-v')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Store release upload URL
        if: startsWith(github.ref, 'refs/tags/halocli-v')
        run: |
          echo ${{ steps.create_release.outputs.upload_url }} > release-upload-url.txt
      - uses: actions/upload-artifact@v2
        if: startsWith(github.ref, 'refs/tags/halocli-v')
        with:
          name: release-upload-url
          path: release-upload-url.txt

  build_cli_tool:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            bin_name: halocli
          - os: windows-latest
            bin_name: halocli.exe
          - os: macos-latest
            bin_name: halocli.pkg
    runs-on: ${{ matrix.os }}
    needs: create_release
    steps:
      - name: Install native dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get install -y libpcsclite-dev
      - name: Install native dependencies (MacOS)
        if: matrix.os == 'macos-latest' && startsWith(github.ref, 'refs/tags/halocli-v')
        run: |
          brew install pcsc-lite
      - if: matrix.os == 'macos-latest' && startsWith(github.ref, 'refs/tags/halocli-v')
        name: Import codesign certificates for application (Mac OS)
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.MACOS_CERTIFICATES_P12 }}
          p12-password: ${{ secrets.MACOS_CERTIFICATES_P12_PASSWORD }}
      - name: Checkout the repository
        if: github.event_name != 'pull_request' || matrix.os == 'ubuntu-latest'
        uses: actions/checkout@v3
      - name: Install Node.JS
        if: github.event_name != 'pull_request' || matrix.os == 'ubuntu-latest'
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies (root)
        if: github.event_name != 'pull_request' || matrix.os == 'ubuntu-latest'
        run: |
          npm --include=dev install
      - name: Install dependencies (cli)
        if: github.event_name != 'pull_request' || matrix.os == 'ubuntu-latest'
        run: |
          cd cli
          npm --include=dev install
      - name: Package HaLo CLI tool (Linux)
        if: github.event_name != 'pull_request' || matrix.os == 'ubuntu-latest'
        run: |
          cd cli
          node_modules/.bin/pkg -t node16-linux-x64 package.json
      - name: Package HaLo CLI tool (Windows)
        if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/halocli-v')
        run: |
          cd cli
          node_modules/.bin/pkg -t node16-win-x64 package.json
      - name: Package HaLo CLI tool (MacOS)
        if: matrix.os == 'macos-latest' && startsWith(github.ref, 'refs/tags/halocli-v')
        run: |
          cd cli
          node_modules/.bin/pkg -t node16-macos-x64 package.json
      - name: Sign application for Mac OS
        if: matrix.os == 'macos-latest' && startsWith(github.ref, 'refs/tags/halocli-v')
        run: |
          mkdir -p cli/dist/root/usr/local/bin/
          mv cli/dist/halocli cli/dist/root/usr/local/bin/halocli
          /usr/bin/codesign --deep --force --options=runtime --entitlements ./cli/Entitlements.plist --sign "${{ secrets.MACOS_IDENTITY }}" --timestamp ./cli/dist/root/usr/local/bin/halocli
          pkgbuild --root ./cli/dist/root --identifier "org.arx.halo.halocli" --version "1.0.$(date +%s)" --install-location "/" --sign "${{ secrets.MACOS_IDENTITY_INSTALLER }}" ./cli/dist/halocli.pkg
      - name: Notarize application for Mac OS
        if: matrix.os == 'macos-latest' && startsWith(github.ref, 'refs/tags/halocli-v')
        run: |
          xcrun notarytool submit "--apple-id=${{ secrets.MACOS_APPLE_ID }}" "--password=${{ secrets.MACOS_PWD_ALTOOL }}" "--team-id=${{ secrets.MACOS_TEAM_ID }}" --progress --wait ./cli/dist/halocli.pkg
      - name: Staple notarized application for Mac OS
        if: matrix.os == 'macos-latest' && startsWith(github.ref, 'refs/tags/halocli-v')
        run: |
          xcrun stapler staple -v ./cli/dist/halocli.pkg
          rm -rf ./cli/dist/root/
      - name: Download release upload URL
        if: startsWith(github.ref, 'refs/tags/halocli-v')
        uses: actions/download-artifact@v2
        with:
          name: release-upload-url
      - name: Store release upload URL output
        id: out_store
        if: startsWith(github.ref, 'refs/tags/halocli-v')
        run: |
          echo "release_upload_url=$(cat release-upload-url.txt)" >> "$GITHUB_OUTPUT"
      - name: Upload release asset
        id: upload-release-asset
        if: startsWith(github.ref, 'refs/tags/halocli-v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.out_store.outputs.release_upload_url }}
          asset_path: ./cli/dist/${{ matrix.bin_name }}
          asset_name: ${{ matrix.bin_name }}
          asset_content_type: application/octet-stream
