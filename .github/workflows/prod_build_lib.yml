name: Release libhalo.js

on:
  push:
    tags:
      - 'libhalo-v*'

jobs:
  create_release:
    name: Create libhalo release
    runs-on: ubuntu-latest
    steps:
      - name: Prepare version number
        id: parse_version
        run: |
          ( echo -n "version=" && ( echo "$GITHUB_REF" | cut -f2 -d- | tr -d '\n' ) ) >> "$GITHUB_OUTPUT"
      - name: Draft release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: LibHaLo ${{ steps.parse_version.outputs.version }}
          draft: true
          prerelease: false
          body: |
            Standalone JavaScript library for usage with classic HTML applications.
            
            Release contents:
            * `libhalo.js` - standalone JavaScript library for inclusion in classic HTML applications;
            * `libhalo.js.LICENSE` - license information;
            * `libhalo.cosign.zip` - build audit trail;
      - name: Store release upload URL
        if: startsWith(github.ref, 'refs/tags/libhalo-v')
        run: |
          echo -n "${{ steps.create_release.outputs.upload_url }}" > release-upload-url.txt
      - uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/libhalo-v')
        with:
          name: release-upload-url
          path: release-upload-url.txt

  build_js_lib:
    name: Build libhalo and release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    needs: create_release
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Install Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies (root)
        run: |
          npm --include=dev install
      - name: Run webpack
        run: |
          cd web
          webpack
      - name: Download release upload URL
        if: startsWith(github.ref, 'refs/tags/libhalo-v')
        uses: actions/download-artifact@v3
        with:
          name: release-upload-url
      - name: Store release upload URL output
        id: out_store
        if: startsWith(github.ref, 'refs/tags/libhalo-v')
        run: |
          echo "release_upload_url=$(cat release-upload-url.txt)" >> "$GITHUB_OUTPUT"
      - name: Install cosign
        uses: sigstore/cosign-installer@c3667d99424e7e6047999fb6246c0da843953c65
      - name: Sign libhalo.js with cosign
        run: |
          cd ./web/dist
          echo y | cosign sign-blob ./libhalo.js --output-certificate ./libhalo.js.pem --output-signature ./libhalo.js.sig
          cosign verify-blob --cert ./libhalo.js.pem --signature ./libhalo.js.sig --certificate-identity "https://github.com/arx-research/libhalo/.github/workflows/prod_build_lib.yml@${GITHUB_REF}" --certificate-oidc-issuer https://token.actions.githubusercontent.com ./libhalo.js
          zip ./libhalo.cosign.zip ./libhalo.js.pem ./libhalo.js.sig
      - name: Upload release asset (JS bundle)
        id: upload-release-asset
        if: startsWith(github.ref, 'refs/tags/libhalo-v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.out_store.outputs.release_upload_url }}
          asset_path: ./web/dist/libhalo.js
          asset_name: libhalo.js
          asset_content_type: text/javascript
      - name: Upload release asset (LICENSE file)
        id: upload-release-asset-license
        if: startsWith(github.ref, 'refs/tags/libhalo-v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.out_store.outputs.release_upload_url }}
          asset_path: ./web/dist/libhalo.js.LICENSE.txt
          asset_name: libhalo.js.LICENSE.txt
          asset_content_type: text/plain
      - name: Upload release asset (signature)
        id: upload-release-asset-signature
        if: startsWith(github.ref, 'refs/tags/libhalo-v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.out_store.outputs.release_upload_url }}
          asset_path: ./web/dist/libhalo.cosign.zip
          asset_name: libhalo.cosign.zip
          asset_content_type: application/octet-stream
